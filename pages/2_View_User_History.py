 # Importing all the required libraries
import requests
import streamlit as st
import time
from dotenv import load_dotenv
from logger import MyLogger

# Setting the title of the Page
# st.title("View History")
st.set_page_config(page_title="View History", layout="centered")
st.write("View User History here")

# Setting up the sidebar

# Initiating logger
logger = MyLogger.get_logger(__name__)

# Storing App URL in a variable
API_URL_db = "http://127.0.0.1:8080/data_db"

# Loading the environment
load_dotenv()

# Headers for the authentication
headers = {
    'Authorization': 'Bearer 1234' ,
    'Content-Type': 'application/json'
}

# Input for the request
u_id= str(st.text_input("Enter the desired user id"))

if st.button("View"):
        start_time= time.perf_counter()
        logger.info(
                f"Program starts now: {start_time}"
        )
        if u_id is not None :
            try:
                payload_db={
                    "id":u_id
                    }
                response = requests.post(API_URL_db, json=payload_db
                ,headers=headers)
                logger.info(
                f"this the json response generated by the api: {response}"
            )
                # printing the response on the streamlit page
                if response.status_code == 200 :
                    response_data = response.json()
                    if "error" in response_data:
                        st.error(response_data["error"])
                    else: 
                        user_hist= response.json()
                        st.header(f"All records of the user {u_id}")
                        df_user= st.dataframe(user_hist)
                        st.header(f"Graphical Representation for the user {u_id}")
                        st.bar_chart(user_hist,x='confidence',
                                     y='sentiment')
                        
                        logger.info(
                f"this the json response for the data generated by the api: {user_hist}"
            )
                if response.status_code == 200:
                    response_data= response.json()
                else:
                    st.error(f"Request failed with status code {response.status_code}")

            except Exception as e:
                st.error(f"an error occured : {e}")
        else:
            st.warning("please enter an id ")
